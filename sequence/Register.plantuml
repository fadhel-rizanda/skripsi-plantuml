@startuml
' === Styling ===
skinparam sequence {
    LifelineFooterStrategy none
    MessageAlign center
    ArrowThickness 1
    ParticipantPadding 20
    GroupBorderThickness 0.5
    GroupBackgroundColor #F9F9F9
}
hide footbox

' === Participants ===
actor Pengguna
participant "Register Page (Next.js FE)" as FE
participant "AuthController (Laravel BE)" as BE
participant "Cache (Redis)" as Redis
database "Database (PostgreSQL)" as DB
participant "EmailService (Laravel BE)" as Mailer
participant "Google OAuth" as Google

' === Registration Flow ===
alt Register secara manual
Pengguna -> FE: Isi form (username, email, password)
activate FE
FE -> BE: POST /api/register { username, email, password }
deactivate FE
activate BE
BE -> BE: Validasi data input
activate BE #LightBlue
deactivate BE #LightBlue

alt Valid input
    BE -> DB: Cek email/username sudah terdaftar?
    activate DB
    DB --> BE: Success (User not found)
    BE -> DB: Membuat data pengguna baru
    DB --> BE: Success (User created)

    BE -> Redis: SET OTP:{email} = generated_code (expired 2 menit)
    activate Redis
    Redis --> BE: OK
    deactivate Redis

    BE -> Mailer: Kirim email berisi kode OTP ke pengguna
    activate Mailer
    Mailer --> BE: OK (Email sent)
    deactivate Mailer
    BE --> FE: 201 Created (Data pengguna dan Auth token)
    deactivate BE
    activate FE
    FE -> FE: Simpan Data pengguna Auth token
    activate FE #LightBlue
    deactivate FE #LightBlue
    FE -> Pengguna: Tampilkan halaman aktivasi akun (input kode OTP / pilihan Verify Later)
    deactivate FE
    deactivate FE

    else Email or username already exists
        DB --> BE: Error (e.g., constraint violation / connection failure)
        deactivate DB
        activate BE
        BE --> FE: 409 Conflict ("Email or username already exists")
        deactivate BE
        activate FE
        FE -> Pengguna: Tampilkan pesan "Email or username already exists"
        deactivate FE
end


' === Account Activation Flow ===
alt Pengguna pilih "Verify Code"
    Pengguna -> FE: Input kode OTP dari email
    activate FE
    FE -> BE: POST /api/verify-otp { otp_code }
    deactivate FE
    activate BE
    BE -> Redis: GET OTP:{user_id}
    activate Redis
    Redis --> BE: returned_code
    deactivate Redis

        BE -> BE: Cocokkan returned_code dengan otp_code
        activate BE #LightBlue
        deactivate BE #LightBlue
    alt OTP valid
        BE -> DB: perbarui data user is_verified=true
        activate DB
        DB --> BE: Success (User verified)
        deactivate DB
        BE -> BE: Menetapkan role pengguna
        activate BE #LightBlue
        deactivate BE
        BE -> DB: perbarui data user_role
        activate DB
        DB --> BE: Success (Role assigned)
        deactivate DB
        BE --> FE: 200 OK ("Account verified successfully")
        activate FE
        FE -> Pengguna: Tampilkan pesan sukses verifikasi akun
        deactivate FE

    else OTP tidak cocok atau kadaluarsa
        BE --> FE: 400 Bad Request ("Invalid or expired OTP")
        deactivate BE
        activate FE
        FE -> Pengguna: Tampilkan pesan error "Invalid or expired OTP. Please try again."
        deactivate FE
    end

else Pengguna pilih "Verify Later"
    Pengguna -> FE: Klik tombol "Verify Later"
    activate FE
    FE -> Pengguna: Tampilkan pesan "Verification skipped. You can verify later from your profile."
    deactivate FE
end

' === Google Login Flow ===
else Register menggunakan Google
Pengguna -> FE: Klik "Login with Google"
activate FE
FE -> Google: Request OAuth Token
activate Google
Google --> FE: Return OAuth Credential (id_token, email, name)
deactivate Google

FE -> BE: POST /api/login/google { id_token }
deactivate FE
activate BE
BE -> Google: Validasi id_token
activate Google
Google --> BE: Valid (pengguna info)
deactivate Google
BE -> DB: Mencari data pengguna berdasarkan email
deactivate BE

alt Pengguna sudah terdaftar
    activate DB
    DB --> BE: Success (User found)
    deactivate DB

    activate BE
    BE -> DB: perbarui data user_role
    activate DB
    DB --> BE: Success (Role assigned)
    deactivate DB

    BE --> FE: 200 OK (Data pengguna dan Auth token)
    deactivate BE
    activate FE
    FE -> FE: Simpan Auth token dan pengguna data
    activate FE #LightBlue
    deactivate FE
    
    FE -> Pengguna: Mengarahkan ke dashboard
    deactivate FE

else Pengguna belum terdaftar
    activate DB
    DB --> BE: User not found
    deactivate DB
    activate BE
    BE -> DB: Membuat data pengguna baru dengan is_verified=true
    activate DB
    DB --> BE: Success (User created)
    deactivate DB

    BE -> BE: Menetapkan role pengguna
    activate BE #LightBlue
    deactivate BE

    BE -> DB: perbarui data user_role
    activate DB
    DB --> BE: Success (Role assigned)
    deactivate DB

    BE --> FE: 201 Created (Data pengguna dan Auth token)
    deactivate BE
    activate FE
    FE -> FE: Simpan Auth token dan pengguna data
    activate FE #LightBlue
    deactivate FE
    deactivate BE
    FE -> Pengguna: Mengarahkan ke dashboard (verified)
    deactivate FE
end
end
@enduml
